version: '2'
volumes:
  db:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/swarm/docker-mytardis/volumes/db'
  staging:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/swarm/docker-mytardis/volumes/staging'
  static:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/swarm/docker-mytardis/volumes/static'
  store:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/swarm/docker-mytardis/volumes/store'
services:
  django:
    image: uwaedu/mytardis_django:nifcert
    build: .
    ports:
      - '8001:8000'
    environment:
      - DJANGO_ADMINS=[('Dean Taylor','dean.taylor@uwa.edu.au'),]
      - DJANGO_ALLOWED_HOSTS=['trudat-uat.cmca.uwa.edu.au','10.174.0.16','localhost',]
      - DJANGO_DATETIME_FORMAT='jS F Y H:i'
      - DJANGO_DATE_FORMAT='jS F Y'
      - DJANGO_DEBUG=False
      - DJANGO_DEFAULT_FROM_EMAIL='donotreply-trudat-uat@uwa.edu.au'
      - DJANGO_EMAIL_SUBJECT_PREFIX="[TruDat@UWA_UAT]:"
      - DJANGO_LOG_LEVEL=DEBUG
      - DJANGO_SECURE_PROXY_SSL_HEADER=('HTTP_X_FORWARDED_PROTO', 'https')
      - GUNICORN_WORKER_CLASS=gevent
      - MYTARDIS_BIOFORMATS_ENABLE=True
      - MYTARDIS_NIFCERT_ENABLE=True
      - MYTARDIS_SITE_TITLE=TruDat@UWA_UAT
      - MYTARDIS_RAPID_CONNECT_ENABLED=True
    env_file:
      - env.POSTGRES
      - env.RAPID_CONNECT
    links:
      - db
      - rabbitmq
    mem_limit: 1g
    volumes:
      - staging:/usr/src/app/var/staging
      - static:/usr/src/app/static
      - store:/usr/src/app/var/store
  celery:
    image: uwaedu/mytardis_django:nifcert
    command: --loglevel=INFO --autoreload
    environment:
      - CELERY_ENABLE=True
      - DJANGO_LOG_LEVEL=DEBUG
      - MYTARDIS_BIOFORMATS_ENABLE=True
      - MYTARDIS_NIFCERT_ENABLE=True
    env_file:
      - env.POSTGRES
    links:
      - db
      - rabbitmq
    mem_limit: 500m
    volumes:
      - staging:/usr/src/app/var/staging
      - store:/usr/src/app/var/store
  beat:
    image: uwaedu/mytardis_django:nifcert
    environment:
      - CELERY_ENABLE=beat
      - MYTARDIS_BIOFORMATS_ENABLE=True
      - MYTARDIS_NIFCERT_ENABLE=True
    env_file:
      - env.POSTGRES
    links:
      - db
      - rabbitmq
    mem_limit: 500m
    volumes:
      - staging:/usr/src/app/var/staging
      - store:/usr/src/app/var/store
  other:
    image: uwaedu/mytardis_django:nifcert
    command: ["tail","-f","/dev/null",]
    environment:
      - GUNICORN_ENABLE=False
    mem_limit: 500m
    volumes:
      - staging:/usr/src/app/var/staging
      - static:/usr/src/app/static
      - store:/usr/src/app/var/store
      - ./src/mytardis/test.py:/usr/src/app/test.py
  db:
    image: postgres:9.5
    environment:
      - POSTGRES_INITDB_ARGS=--data-checksums --locale=en_US.utf8
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file:
      - env.POSTGRES
    mem_limit: 500m
    volumes:
      - db:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3
    mem_limit: 500m
  static:
    image: nginx
    ports:
      - '8002:80'
    restart: always
    volumes:
      - static:/usr/src/app/static/:ro
      - ./mysite.template:/etc/nginx/conf.d/mysite.template
    environment:
      - NGINX_HOST=trudat-uat-static.cmca.uwa.edu.au
      - NGINX_PORT=80
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    mem_limit: 500m
  haproxy:
    image: haproxy:1.7
    command: echo "haproxy disabled"
    links:
      - django
    mem_limit: 500m
    ports:
      - '127.0.0.1:8080:8000'
      - '127.0.0.1:8443:8443'
    restart: 'no'
    volumes:
      - ./pki/localhost_chain.pem:/localhost_chain.pem
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
